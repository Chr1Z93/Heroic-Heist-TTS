local MIN_VALUE, MAX_VALUE = 0, 100
val = 0

function onSave() return JSON.encode(val) end

function onLoad(savedData)
  if savedData ~= "" and savedData ~= nil then
    val = JSON.decode(savedData)
  end

  -- smaller fontSize for health trackers
  local fontColor = { 1, 1, 1 }
  local fontSize = 800
  local name = self.getName()
  if name == "HealthTrackerBlue" or name == "HealthTrackerRed" then
    fontSize = 500
  end

  self.createButton({
    label = tostring(val),
    click_function = "none",
    function_owner = self,
    position = { 0, 0.5, 0.05 },
    scale = { 0.5, 0.5, 0.5 },
    height = 0,
    width = 0,
    font_size = fontSize,
    font_color = fontColor
  })
  self.addContextMenuItem("Edit Value", function(playerColor)
    Player[playerColor].showInputDialog("Enter new value:", tostring(val), function(text)
      broadcastToAll(getColoredName(playerColor) .. " edited '" .. self.getName() .. "' from '" .. val .. "' to '" .. text .. "'.")
      updateVal(text)
    end)
  end)
end

function updateVal(newVal)
  if tonumber(newVal) then
    val = math.min(math.max(newVal, MIN_VALUE), MAX_VALUE)
    self.editButton({ index = 0, label = tostring(val) })
  end
end

function addOrSubtract(amount)
  val = math.min(math.max(val + amount, MIN_VALUE), MAX_VALUE)
  self.editButton({ index = 0, label = tostring(val) })
  return val
end

function none() end

function getColoredName(playerColor)
  local displayName = playerColor
  if Player[playerColor].steam_name then
    displayName = Player[playerColor].steam_name
  end

  -- add bb-code
  return "[" .. Color.fromString(playerColor):toHex() .. "]" .. displayName .. "[-]"
end
